/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.example.bluno;

public final class R {
  public static final class attr {
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int alphabeticShortcut=0x7f010000;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int barColor=0x7f010001;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barLength=0x7f010002;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int barWidth=0x7f010003;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bar_length=0x7f010004;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bar_pointer_halo_radius=0x7f010005;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bar_pointer_radius=0x7f010006;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int bar_thickness=0x7f010007;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int checkable=0x7f010008;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int circleColor=0x7f010009;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int color_center_halo_radius=0x7f01000a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int color_center_radius=0x7f01000b;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int color_pointer_halo_radius=0x7f01000c;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int color_pointer_radius=0x7f01000d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int color_wheel_radius=0x7f01000e;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int color_wheel_thickness=0x7f01000f;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int defaultValue=0x7f010010;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int delayMillis=0x7f010011;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int dependency=0x7f010012;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int enabled=0x7f010013;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int key=0x7f010014;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int numericShortcut=0x7f010015;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int order=0x7f010016;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int orderingFromXml=0x7f010017;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int persistent=0x7f010018;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int radius=0x7f010019;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int rimColor=0x7f01001a;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int rimWidth=0x7f01001b;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int selectable=0x7f01001c;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shouldDisableView=0x7f01001d;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int spinSpeed=0x7f01001e;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summary=0x7f01001f;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOff=0x7f010020;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int summaryOn=0x7f010021;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int text=0x7f010022;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int textColor=0x7f010023;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int textSize=0x7f010024;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int title=0x7f010025;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int titleCondensed=0x7f010026;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int widgetLayout=0x7f010027;
  }
  public static final class dimen {
    public static final int activity_horizontal_margin=0x7f020000;
    public static final int activity_vertical_margin=0x7f020001;
    public static final int bar_length=0x7f020002;
    public static final int bar_pointer_halo_radius=0x7f020003;
    public static final int bar_pointer_radius=0x7f020004;
    public static final int bar_thickness=0x7f020005;
    public static final int color_center_halo_radius=0x7f020006;
    public static final int color_center_radius=0x7f020007;
    public static final int color_pointer_halo_radius=0x7f020008;
    public static final int color_pointer_radius=0x7f020009;
    public static final int color_wheel_radius=0x7f02000a;
    public static final int color_wheel_thickness=0x7f02000b;
    public static final int list_item_height=0x7f02000c;
    public static final int preference_icon_width=0x7f02000d;
    public static final int preference_margin=0x7f02000e;
    public static final int preference_widget_icon_width=0x7f02000f;
  }
  public static final class drawable {
    public static final int backrepeat=0x7f030000;
    public static final int bottom=0x7f030001;
    public static final int bottom_back=0x7f030002;
    public static final int btn_pressed=0x7f030003;
    public static final int btn_unpressed=0x7f030004;
    public static final int edittext=0x7f030005;
    public static final int frame=0x7f030006;
    public static final int head=0x7f030007;
    public static final int headerrepeat=0x7f030008;
    public static final int ic_launcher=0x7f030009;
    public static final int inputbutton_1=0x7f03000a;
    public static final int inputbutton_2=0x7f03000b;
    public static final int inputbutton_3=0x7f03000c;
    public static final int inputbutton_4=0x7f03000d;
    public static final int inputbutton_5=0x7f03000e;
    public static final int inputbutton_6=0x7f03000f;
    public static final int inputbutton_center=0x7f030010;
    public static final int inputbutton_down=0x7f030011;
    public static final int inputbutton_left=0x7f030012;
    public static final int inputbutton_none=0x7f030013;
    public static final int inputbutton_right=0x7f030014;
    public static final int inputbutton_up=0x7f030015;
    public static final int joystick_selecte=0x7f030016;
    public static final int joystick_unselected=0x7f030017;
    public static final int led_tab_seleted=0x7f030018;
    public static final int led_tab_unseleted=0x7f030019;
    public static final int leddisp=0x7f03001a;
    public static final int mask=0x7f03001b;
    public static final int miduino_background=0x7f03001c;
    public static final int oledresetbutton=0x7f03001d;
    public static final int oleduploadbutton=0x7f03001e;
    public static final int pot_selected=0x7f03001f;
    public static final int pot_unseleted=0x7f030020;
    public static final int potmeter=0x7f030021;
    public static final int resetbutton_off=0x7f030022;
    public static final int resetbutton_on=0x7f030023;
    public static final int scan=0x7f030024;
    public static final int switch_off=0x7f030025;
    public static final int switch_on=0x7f030026;
    public static final int title_connected=0x7f030027;
    public static final int title_connecting=0x7f030028;
    public static final int title_disconnected=0x7f030029;
    public static final int title_null=0x7f03002a;
    public static final int title_scan=0x7f03002b;
    public static final int title_scanning=0x7f03002c;
    public static final int ui2=0x7f03002d;
    public static final int uploadbutton_off=0x7f03002e;
    public static final int uploadbutton_on=0x7f03002f;
  }
  public static final class id {
    public static final int BottomLayout=0x7f040000;
    public static final int ButtonArea=0x7f040001;
    public static final int CenterLayout=0x7f040002;
    public static final int ModeDispArea=0x7f040003;
    public static final int ModeMenuLayout=0x7f040004;
    public static final int TopLayout=0x7f040005;
    public static final int action_settings=0x7f040006;
    public static final int analogTextDisp=0x7f040007;
    public static final int analoglayout=0x7f040008;
    public static final int buzzerSwitch=0x7f040009;
    public static final int buzzerlayout=0x7f04000a;
    public static final int checkbox=0x7f04000b;
    public static final int clearbutton=0x7f04000c;
    public static final int connection_state=0x7f04000d;
    public static final int data_value=0x7f04000e;
    public static final int device_address=0x7f04000f;
    public static final int device_name=0x7f040010;
    public static final int editArea=0x7f040011;
    public static final int gatt_services_list=0x7f040012;
    public static final int humiditydisp=0x7f040013;
    public static final int humiditylayout=0x7f040014;
    public static final int joystickbutton=0x7f040015;
    public static final int joysticklayout=0x7f040016;
    public static final int ledbutton=0x7f040017;
    public static final int ledlayout=0x7f040018;
    public static final int picker=0x7f040019;
    public static final int pot_input_Area=0x7f04001a;
    public static final int potbutton=0x7f04001b;
    public static final int primary=0x7f04001c;
    public static final int pw_spinner=0x7f04001d;
    public static final int relaySwitch=0x7f04001e;
    public static final int relaylayout=0x7f04001f;
    public static final int summary=0x7f040020;
    public static final int tempdisp=0x7f040021;
    public static final int templayout=0x7f040022;
    public static final int title=0x7f040023;
    public static final int title_image_view=0x7f040024;
    public static final int uploadbutton=0x7f040025;
    public static final int widget_frame=0x7f040026;
  }
  public static final class layout {
    public static final int activity_bluno=0x7f050000;
    public static final int gatt_services_characteristics=0x7f050001;
    public static final int listitem_device=0x7f050002;
    public static final int main=0x7f050003;
    public static final int preference=0x7f050004;
    public static final int preference_widget_checkbox=0x7f050005;
  }
  public static final class menu {
    public static final int bluno=0x7f060000;
  }
  public static final class string {
    public static final int action_settings=0x7f070000;
    public static final int app_name=0x7f070001;
    public static final int ble_not_supported=0x7f070002;
    public static final int comm_establish=0x7f070003;
    public static final int connected=0x7f070004;
    public static final int disconnected=0x7f070005;
    public static final int error_bluetooth_not_supported=0x7f070006;
    public static final int hello=0x7f070007;
    public static final int hello_world=0x7f070008;
    public static final int label_data=0x7f070009;
    public static final int label_device_address=0x7f07000a;
    public static final int label_state=0x7f07000b;
    public static final int no_data=0x7f07000c;
    public static final int title_devices=0x7f07000d;
    public static final int unknown_characteristic=0x7f07000e;
    public static final int unknown_device=0x7f07000f;
    public static final int unknown_service=0x7f070010;
  }
  public static final class style {
    public static final int AppBaseTheme=0x7f080000;
    public static final int AppTheme=0x7f080001;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ColorBars.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorBars_bar_length com.example.bluno:bar_length}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorBars_bar_pointer_halo_radius com.example.bluno:bar_pointer_halo_radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorBars_bar_pointer_radius com.example.bluno:bar_pointer_radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorBars_bar_thickness com.example.bluno:bar_thickness}</code></td><td></td></tr>
     * </table>
     * @see #ColorBars_bar_length
     * @see #ColorBars_bar_pointer_halo_radius
     * @see #ColorBars_bar_pointer_radius
     * @see #ColorBars_bar_thickness
     */
    public static final int[] ColorBars={
      0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007
    };
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#bar_length}
     * attribute's value can be found in the {@link #ColorBars} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:bar_length
     */
    public static final int ColorBars_bar_length=0;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#bar_pointer_halo_radius}
     * attribute's value can be found in the {@link #ColorBars} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:bar_pointer_halo_radius
     */
    public static final int ColorBars_bar_pointer_halo_radius=1;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#bar_pointer_radius}
     * attribute's value can be found in the {@link #ColorBars} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:bar_pointer_radius
     */
    public static final int ColorBars_bar_pointer_radius=2;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#bar_thickness}
     * attribute's value can be found in the {@link #ColorBars} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:bar_thickness
     */
    public static final int ColorBars_bar_thickness=3;
    /**
     * Attributes that can be used with a ColorPicker.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorPicker_color_center_halo_radius com.example.bluno:color_center_halo_radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorPicker_color_center_radius com.example.bluno:color_center_radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorPicker_color_pointer_halo_radius com.example.bluno:color_pointer_halo_radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorPicker_color_pointer_radius com.example.bluno:color_pointer_radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorPicker_color_wheel_radius com.example.bluno:color_wheel_radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorPicker_color_wheel_thickness com.example.bluno:color_wheel_thickness}</code></td><td></td></tr>
     * </table>
     * @see #ColorPicker_color_center_halo_radius
     * @see #ColorPicker_color_center_radius
     * @see #ColorPicker_color_pointer_halo_radius
     * @see #ColorPicker_color_pointer_radius
     * @see #ColorPicker_color_wheel_radius
     * @see #ColorPicker_color_wheel_thickness
     */
    public static final int[] ColorPicker={
      0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d, 
      0x7f01000e, 0x7f01000f
    };
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#color_center_halo_radius}
     * attribute's value can be found in the {@link #ColorPicker} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:color_center_halo_radius
     */
    public static final int ColorPicker_color_center_halo_radius=0;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#color_center_radius}
     * attribute's value can be found in the {@link #ColorPicker} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:color_center_radius
     */
    public static final int ColorPicker_color_center_radius=1;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#color_pointer_halo_radius}
     * attribute's value can be found in the {@link #ColorPicker} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:color_pointer_halo_radius
     */
    public static final int ColorPicker_color_pointer_halo_radius=2;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#color_pointer_radius}
     * attribute's value can be found in the {@link #ColorPicker} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:color_pointer_radius
     */
    public static final int ColorPicker_color_pointer_radius=3;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#color_wheel_radius}
     * attribute's value can be found in the {@link #ColorPicker} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:color_wheel_radius
     */
    public static final int ColorPicker_color_wheel_radius=4;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#color_wheel_thickness}
     * attribute's value can be found in the {@link #ColorPicker} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:color_wheel_thickness
     */
    public static final int ColorPicker_color_wheel_thickness=5;
    /**
     * Attributes that can be used with a Preference.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Preference_alphabeticShortcut com.example.bluno:alphabeticShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_checkable com.example.bluno:checkable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_defaultValue com.example.bluno:defaultValue}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_dependency com.example.bluno:dependency}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_enabled com.example.bluno:enabled}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_key com.example.bluno:key}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_numericShortcut com.example.bluno:numericShortcut}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_order com.example.bluno:order}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_orderingFromXml com.example.bluno:orderingFromXml}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_persistent com.example.bluno:persistent}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_selectable com.example.bluno:selectable}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_shouldDisableView com.example.bluno:shouldDisableView}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_summary com.example.bluno:summary}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_summaryOff com.example.bluno:summaryOff}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_summaryOn com.example.bluno:summaryOn}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_title com.example.bluno:title}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_titleCondensed com.example.bluno:titleCondensed}</code></td><td></td></tr>
     * <tr><td><code>{@link #Preference_widgetLayout com.example.bluno:widgetLayout}</code></td><td></td></tr>
     * </table>
     * @see #Preference_alphabeticShortcut
     * @see #Preference_checkable
     * @see #Preference_defaultValue
     * @see #Preference_dependency
     * @see #Preference_enabled
     * @see #Preference_key
     * @see #Preference_numericShortcut
     * @see #Preference_order
     * @see #Preference_orderingFromXml
     * @see #Preference_persistent
     * @see #Preference_selectable
     * @see #Preference_shouldDisableView
     * @see #Preference_summary
     * @see #Preference_summaryOff
     * @see #Preference_summaryOn
     * @see #Preference_title
     * @see #Preference_titleCondensed
     * @see #Preference_widgetLayout
     */
    public static final int[] Preference={
      0x7f010000, 0x7f010008, 0x7f010010, 0x7f010012, 
      0x7f010013, 0x7f010014, 0x7f010015, 0x7f010016, 
      0x7f010017, 0x7f010018, 0x7f01001c, 0x7f01001d, 
      0x7f01001f, 0x7f010020, 0x7f010021, 0x7f010025, 
      0x7f010026, 0x7f010027
    };
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#alphabeticShortcut}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.bluno:alphabeticShortcut
     */
    public static final int Preference_alphabeticShortcut=0;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#checkable}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.bluno:checkable
     */
    public static final int Preference_checkable=1;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#defaultValue}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.example.bluno:defaultValue
     */
    public static final int Preference_defaultValue=2;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#dependency}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.bluno:dependency
     */
    public static final int Preference_dependency=3;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#enabled}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.bluno:enabled
     */
    public static final int Preference_enabled=4;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#key}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.bluno:key
     */
    public static final int Preference_key=5;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#numericShortcut}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.bluno:numericShortcut
     */
    public static final int Preference_numericShortcut=6;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#order}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.example.bluno:order
     */
    public static final int Preference_order=7;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#orderingFromXml}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.bluno:orderingFromXml
     */
    public static final int Preference_orderingFromXml=8;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#persistent}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.bluno:persistent
     */
    public static final int Preference_persistent=9;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#selectable}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.bluno:selectable
     */
    public static final int Preference_selectable=10;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#shouldDisableView}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.example.bluno:shouldDisableView
     */
    public static final int Preference_shouldDisableView=11;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#summary}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.bluno:summary
     */
    public static final int Preference_summary=12;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#summaryOff}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.bluno:summaryOff
     */
    public static final int Preference_summaryOff=13;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#summaryOn}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.bluno:summaryOn
     */
    public static final int Preference_summaryOn=14;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#title}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.bluno:title
     */
    public static final int Preference_title=15;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#titleCondensed}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.bluno:titleCondensed
     */
    public static final int Preference_titleCondensed=16;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#widgetLayout}
     * attribute's value can be found in the {@link #Preference} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.example.bluno:widgetLayout
     */
    public static final int Preference_widgetLayout=17;
    /**
     * Attributes that can be used with a ProgressWheel.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ProgressWheel_barColor com.example.bluno:barColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_barLength com.example.bluno:barLength}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_barWidth com.example.bluno:barWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_circleColor com.example.bluno:circleColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_delayMillis com.example.bluno:delayMillis}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_radius com.example.bluno:radius}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_rimColor com.example.bluno:rimColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_rimWidth com.example.bluno:rimWidth}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_spinSpeed com.example.bluno:spinSpeed}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_text com.example.bluno:text}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_textColor com.example.bluno:textColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #ProgressWheel_textSize com.example.bluno:textSize}</code></td><td></td></tr>
     * </table>
     * @see #ProgressWheel_barColor
     * @see #ProgressWheel_barLength
     * @see #ProgressWheel_barWidth
     * @see #ProgressWheel_circleColor
     * @see #ProgressWheel_delayMillis
     * @see #ProgressWheel_radius
     * @see #ProgressWheel_rimColor
     * @see #ProgressWheel_rimWidth
     * @see #ProgressWheel_spinSpeed
     * @see #ProgressWheel_text
     * @see #ProgressWheel_textColor
     * @see #ProgressWheel_textSize
     */
    public static final int[] ProgressWheel={
      0x7f010001, 0x7f010002, 0x7f010003, 0x7f010009, 
      0x7f010011, 0x7f010019, 0x7f01001a, 0x7f01001b, 
      0x7f01001e, 0x7f010022, 0x7f010023, 0x7f010024
    };
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#barColor}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.bluno:barColor
     */
    public static final int ProgressWheel_barColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#barLength}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:barLength
     */
    public static final int ProgressWheel_barLength=1;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#barWidth}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:barWidth
     */
    public static final int ProgressWheel_barWidth=2;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#circleColor}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.bluno:circleColor
     */
    public static final int ProgressWheel_circleColor=3;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#delayMillis}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.example.bluno:delayMillis
     */
    public static final int ProgressWheel_delayMillis=4;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#radius}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:radius
     */
    public static final int ProgressWheel_radius=5;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#rimColor}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.bluno:rimColor
     */
    public static final int ProgressWheel_rimColor=6;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#rimWidth}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:rimWidth
     */
    public static final int ProgressWheel_rimWidth=7;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#spinSpeed}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:spinSpeed
     */
    public static final int ProgressWheel_spinSpeed=8;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#text}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.example.bluno:text
     */
    public static final int ProgressWheel_text=9;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#textColor}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.example.bluno:textColor
     */
    public static final int ProgressWheel_textColor=10;
    /**
     * <p>This symbol is the offset where the {@link com.example.bluno.R.attr#textSize}
     * attribute's value can be found in the {@link #ProgressWheel} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.example.bluno:textSize
     */
    public static final int ProgressWheel_textSize=11;
  }
  public static final class xml {
    public static final int test4preference=0x7f0a0000;
  }
}